plugins {
    id "org.jetbrains.kotlin.jvm" version "1.1.4"
    id "application"
}

allprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

mainClassName = 'api.server.MainApp'

defaultTasks 'build'

repositories {
    maven {
        name "aliyun-maven"
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    jcenter()
    ivy {
        name "typesafe-ivy-release"
        url "https://repo.typesafe.com/typesafe/ivy-releases"
        layout "ivy"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:1.1.4"
    compile "org.jetbrains.kotlin:kotlin-reflect:1.1.4"

    compile project(':subProjects:api-server')
}

distZip {
    into(project.name) {
        from '.'
        include 'conf/*'
    }
}

distTar {
    into(project.name) {
        from '.'
        include 'conf/*'
    }
}

tasks.withType(CreateStartScripts) {
    it.unixStartScriptGenerator.template = resources.text.fromFile('unixStartScript.txt')
}

tasks.withType(JavaExec) {
    if (project.hasProperty("debug")) {
        def debugPort = "9999"
        if (project.findProperty("debug").toString().isNumber()) {
            debugPort = project.findProperty("debug").toString()
        }
        it.forkOptions.jvmArgs.add("-Xdebug")
        it.forkOptions.jvmArgs.add("-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${debugPort}")
        println("\u001b[35m" + "Remote debug is enabled. debug port: ${debugPort}" + "\u001b[0m")
    }

    it.systemProperties(System.properties as Map<String, ?>)
}

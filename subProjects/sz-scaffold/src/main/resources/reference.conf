app {

  httpServer {
    port = 9000
    host = "0.0.0.0"

    initialSettings = {
      "headerTableSize": 4096,
      "initialWindowSize": 65535,
      "maxConcurrentStreams": 100,
      "maxFrameSize": 16384,
      "maxHeaderListSize": 2147483647,
      "pushEnabled": true
    }
  }

  vertx {
    // https://vertx.io/docs/#clustering
    // ClusterManager: 可选 Ignite, Zookeeper
    clusterManager = "Ignite"
  }

  profiler {
    api {
      enabled = false
      timeThreshold = 100   // 单位: ms
      excludeRoutes = []    // 需要排除掉的的 route 列表
    }
  }
}

redis {
  default {
    host = "127.0.0.1"
    port = 6379
    timeout = 2000
    database = 0
    ssl = false
    #  password = ""
    level2 {
      cacheEnabled = false
      // 时间单位: 秒, 取值大于0时有效
      refreshAfterWrite = 0
      expireAfterAccess = 0
      expireAfterWrite = 0
      expireVariably = 0
    }


    pool {
      maxIdle = 8
      minIdle = 0
      maxTotal = 8
      maxWaitMillis = -1
      testOnBorrow = true
      testOnReturn = false
      testWhileIdle = true
      timeBetweenEvictionRunsMillis = 30000
      numTestsPerEvictionRun = -1
      minEvictableIdleTimeMillis = 60000
      softMinEvictableIdleTimeMillis = 1800000
      lifo = true
      blockWhenExhausted = true
    }

  }
}
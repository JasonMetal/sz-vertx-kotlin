app {

  httpServer {
    port = 9000
    host = "0.0.0.0"
    // productionMode 为 true 表示工作在生产环境, 为 false 表示工作在开发环境
    productionMode = false

    initialSettings = {
      "headerTableSize": 4096,
      "initialWindowSize": 65535,
      "maxConcurrentStreams": 100,
      "maxFrameSize": 16384,
      "maxHeaderListSize": 2147483647,
      "pushEnabled": true
    }

    bodyHandler {
      bodyLimit = 100000
      uploadsDirectory = "file_uploads"
      mergeFormAttributes = false
      deleteUploadedFilesOnEnd = true
    }

    dispatcher {
      factory = "sz.scaffold.dispatchers.VertxWorkerPoolDispatcher"
    }

    httpOptions {
      // 请参考 HttpServerOptionsConverter.fromJson(...) 方法, 添加配置选项
    }

    networkOptions {
      // http://www.vants.org/?post=210
      tcpFastOpen = true
      // http://www.itdaan.com/blog/2017/11/08/18a176a9e1b6bca4a9cbe36b5070876c.html
      tcpCork = true
      // https://blog.csdn.net/bin_linux96/article/details/53141799
      tcpQuickAck = false
      // https://blog.csdn.net/u012398613/article/details/52317464
      reusePort = true
    }

    webSocket {
      // 是否由 server 端自动向连接的客户端发起ping操作
      autoPingByServer = true
      // websocket 为了维护长连接, 服务器端自动向客户端ping的时间间隔, 单位: 毫秒
      pingInterval = 30000

      // the maximum webSocket frame size in bytes. default: 64 KB (65536 Bytes)
      maxWebSocketFrameSize = 65536
      // Default max WebSocket message size (could be assembled from multiple frames) is 4 full frames worth of data.
      // default is 65536 * 4 (256 KB)
      maxWebSocketMessageSize = 262144
    }

    // 全局拦截器, 所有的请求都会经过指定的拦截器进行处理
    // 拦截器的顺序与列表的顺序相同
    // 全局拦截器从 sz.scaffold.aop.interceptors.GlobalInterceptorBase 基类基础
    interceptors = [
//      {
//        className = "todo: 放上拦截器的类名"
//        config = {}
//      },
//      {
//        className = "todo: 放上拦截器的类名"
//        config = {}
//      },
    ]
  }

  vertx {
    options {
      clustered = false
      workerPoolSize = 16
      preferNativeTransport = true
    }

    zookeeper {
      // zookeeper 主机， 多个主机配置方式, 例如： "zooServer_1:2181,zooServer_2:2181,zooServer_3:2181"
      zookeeperHosts = "localhost:2181"
      sessionTimeout = 20000
      connectTimeout = 3000
      rootPath = "io.vertx"
      retry {
        initialSleepTime = 100
        intervalTimes = 10000
        maxTimes = 5
      }
    }
  }
}
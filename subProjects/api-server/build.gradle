apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'application'

repositories {
    maven {
        name "aliyun-maven"
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    jcenter()
    ivy {
        name "typesafe-ivy-release"
        url "https://repo.typesafe.com/typesafe/ivy-releases"
        layout "ivy"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.31"
    compile "org.jetbrains.kotlin:kotlin-reflect:1.2.31"

    compile project(':subProjects:controllers')
    compile project(':subProjects:sz-scaffold')
    compile project(':subProjects:sz-api-doc')
    compile project(':subProjects:sz-plan-task')

    compile files("conf")
}

mainClassName = 'api.server.MainApp'

distZip {
    into(project.name) {
        from '.'
        include 'conf/**'
    }
}

distTar {
    into(project.name) {
        from '.'
        include 'conf/**'
    }
}

tasks.withType(CreateStartScripts) {
    it.unixStartScriptGenerator.template = resources.text.fromFile('unixStartScript.txt')
}

tasks.withType(JavaExec) {
    if (project.hasProperty("debug")) {
        def debugPort = "5005"
        if (project.findProperty("debug").toString().isNumber()) {
            debugPort = project.findProperty("debug").toString()
        }
        it.jvmArgs.add("-Xdebug")
        it.jvmArgs.add("-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${debugPort}")
        println("\u001b[35m" + "Remote debug is enabled. debug port: ${debugPort}" + "\u001b[0m")
    }

    it.systemProperties(System.properties as Map<String, ?>)
}

